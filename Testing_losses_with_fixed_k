# Testing of loss functions with additional k:
library(mboost)


ConstBisquare <- function ( k=4.685){
  Family(ngradient = function(y, f,w = rep(1, length(y))) {
    d <- k
    (abs(y-f)<=d)*(y-f)*(1-((y-f)/d)^2)^2}, 
    loss = function(y, f,w = rep(1, length(y))) {
      d <- k
      (abs(y-f)<=d)*d^2/6*(1-(1-((y-f)/d)^2)^3)+(abs(y-f)>d)/6*1},
    offset = function(y,w=rep(1, length(y))){
      median(y[rep(1:length(y), w)])}
  )
}


ConstHuber <- function(k=1.345,q=0.5){
  Family(loss=function(y,f, w = rep(1, length(y))){
      d_1 <- k
      ifelse( y-f < -d_1, -2*(1 - q)*d_1*(y - f)-(1 - q)*d_1^2, 
              ifelse( y-f <0,(1 - q)*(y - f)^2, 
                      ifelse(y - f <= d_1, q*(y - f)^2, 2*q*d_1*(y - f)-q*d_1^2)))},
    ngradient = function(y, f, w = rep(1, length(y))){
      d_1 <-k
      ifelse( y - f< -d_1, -2*(1 - q)*d_1, ifelse(y - f < 0, 2*(1 - q)*(y - f), ifelse(y - f <= d_1,2*q*(y - f),2*q*d_1)))},
    offset = function(y,w=rep(1, length(y))){
      median(y[rep(1:length(y), w)])}
  )
}




